 pid_t pid = fork();
        if (pid == 0) { // Child process
            close(server_sock);
            handle_client(client_sock);
            exit(0);
        } else if (pid > 0) { // Parent process
            printf("Connected to client, PID: %d\n", pid);
            close(client_sock);
        } else {
            perror("Fork failed");
        }





handle()

int bytes_received = recv(client_socket, filename, BUFFER_SIZE, 0);
	if (bytes_received < 0) {
		perror("Error receiving filename");
		close(client_socket);
		return;
	}

	// Open the requested file

	FILE *file = fopen(filename, "r");
	if (file == NULL) {
		char *error_message = "File not found";
		send(client_socket, error_message, strlen(error_message), 0);
		perror("File not found");
	} else {

		// Read file and send its content

		while (fgets(buffer, BUFFER_SIZE, file) != NULL) {
			send(client_socket, buffer, strlen(buffer), 0);
			memset(buffer, 0, BUFFER_SIZE);
		}

		printf("File Send to client\n");
		fclose(file);
	}
